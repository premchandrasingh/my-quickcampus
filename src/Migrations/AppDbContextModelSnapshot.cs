// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My.QuickCampus.Data;

#nullable disable

namespace My.QuickCampus.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.18");

            modelBuilder.Entity("My.QuickCampus.Entities.Assignment", b =>
                {
                    b.Property<long>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassSectionName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByEmployeeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByEmployeeNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditedByEmployeeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditedByEmployeeNo")
                        .HasColumnType("TEXT");

                    b.Property<long>("GradeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("PostedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusCreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusCreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusEditedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusEditedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssignmentId")
                        .HasName("PK_Assignment_AssignmentId");

                    b.HasIndex("GradeId");

                    b.ToTable("Assignment", (string)null);
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Grade", b =>
                {
                    b.Property<long>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCurrentClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GradeId")
                        .HasName("PK_Grade_GradeId");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("IX_Grade_StudentId");

                    b.ToTable("Grade", (string)null);
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Homework", b =>
                {
                    b.Property<long>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassSectionName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByEmployeeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByEmployeeNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditedByEmployeeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditedByEmployeeNo")
                        .HasColumnType("TEXT");

                    b.Property<long>("GradeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("PostedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusCreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusCreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusEditedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusEditedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("HomeworkId")
                        .HasName("PK_Homework_HomeworkId");

                    b.HasIndex("GradeId");

                    b.ToTable("Homework", (string)null);
                });

            modelBuilder.Entity("My.QuickCampus.Entities.MediaFile", b =>
                {
                    b.Property<long>("MediaFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<long?>("HomeworkId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusFileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("MediaFileId")
                        .HasName("PK_MediaFile_MediaFileId");

                    b.ToTable("MediaFile", (string)null);
                });

            modelBuilder.Entity("My.QuickCampus.Entities.QuickCampusSync", b =>
                {
                    b.Property<long>("QuickCampusSyncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("GradeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<int>("SourceMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SyncType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("QuickCampusSyncId")
                        .HasName("PK_QuickCampusSync_QuickCampusSyncId");

                    b.HasIndex("GradeId");

                    b.ToTable("QuickCampusSync", (string)null);
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Student", b =>
                {
                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuickCampusId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScholarNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId")
                        .HasName("PK_Student_StudentId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Assignment", b =>
                {
                    b.HasOne("My.QuickCampus.Entities.Grade", "Grade")
                        .WithMany("Assignments")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Assignment_Grade_GradeId");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Grade", b =>
                {
                    b.HasOne("My.QuickCampus.Entities.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Grade_Student_StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Homework", b =>
                {
                    b.HasOne("My.QuickCampus.Entities.Grade", "Grade")
                        .WithMany("Homeworks")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Homework_Grade_GradeId");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("My.QuickCampus.Entities.MediaFile", b =>
                {
                    b.HasOne("My.QuickCampus.Entities.Assignment", "Assignment")
                        .WithMany("MediaFiles")
                        .HasForeignKey("MediaFileId")
                        .HasConstraintName("FK_MediaFile_Assignment_MediaFileId");

                    b.HasOne("My.QuickCampus.Entities.Homework", "Homework")
                        .WithMany("MediaFiles")
                        .HasForeignKey("MediaFileId")
                        .HasConstraintName("FK_MediaFile_Homework_MediaFileId");

                    b.Navigation("Assignment");

                    b.Navigation("Homework");
                });

            modelBuilder.Entity("My.QuickCampus.Entities.QuickCampusSync", b =>
                {
                    b.HasOne("My.QuickCampus.Entities.Grade", "Grade")
                        .WithMany("QuickCampusSyncs")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuickCampusSync_Grade_GradeId");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Assignment", b =>
                {
                    b.Navigation("MediaFiles");
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Grade", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Homeworks");

                    b.Navigation("QuickCampusSyncs");
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Homework", b =>
                {
                    b.Navigation("MediaFiles");
                });

            modelBuilder.Entity("My.QuickCampus.Entities.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
